name: Mass Plugin Test

on: [pull_request, push]

jobs:
  mass-plugin-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Rename JAR
        run: mv openbd-cli/build/libs/*.jar OpenBD.jar

      - name: Prepare Environment (Truly Random Plugins)
        run: |
          set -euo pipefail
          mkdir -p input_multiple output

          echo "Fetching truly random Paper/Spigot plugins from Modrinth..."
          SEARCH_URL="https://api.modrinth.com/v2/search?facets=%5B%5B%22project_type:plugin%22%5D%2C%5B%22categories:paper%22%5D%5D&limit=100"

          TOTAL_HITS=$(curl -sSf "$SEARCH_URL" | jq '.total_hits')
          echo "Found a total of $TOTAL_HITS compatible plugins."

          MAX_OFFSET=$((TOTAL_HITS - 100))
          if [ $MAX_OFFSET -lt 0 ]; then
            MAX_OFFSET=0
          fi
          RANDOM_OFFSET=$(shuf -i 0-$MAX_OFFSET -n 1)
          echo "Using random offset: $RANDOM_OFFSET"

          curl -sSf "${SEARCH_URL}&offset=${RANDOM_OFFSET}" \
            | jq -r '.hits[].slug' \
            | shuf -n 20 > modrinth_list.txt

          while read -r slug; do
            echo "Downloading $slug (Paper/Spigot) from Modrinth..."
            if ! versions=$(curl -sSf "https://api.modrinth.com/v2/project/$slug/version"); then
              echo "⚠️ Could not fetch versions for $slug – skipping."
              continue
            fi
            url=$(echo "$versions" \
                  | jq -r '
                      .[]
                      | select(.loaders | any(. == "paper" or . == "spigot"))
                      | .files[]
                      | select(.primary == true)
                      | .url' \
                  | head -n1 || true)
            if [ -n "$url" ] && [ "$url" != "null" ]; then
              JAR_PATH="input_multiple/${slug}.jar"
              curl -L "$url" -o "$JAR_PATH"
              
              if unzip -l "$JAR_PATH" "plugin.yml" > /dev/null 2>&1; then
                echo "  -> ✅ Validated: plugin.yml found."
              else
                echo "  -> ⚠️ Validation failed: No plugin.yml found. Deleting invalid JAR."
                rm "$JAR_PATH"
              fi
            else
              echo "⚠️ No suitable Paper/Spigot jar for $slug – skipping."
            fi
          done < modrinth_list.txt

          echo "Downloaded and validated $(ls input_multiple | wc -l) plugins."

      - name: Prepare Test Configuration
        run: |
          java -jar OpenBD.jar --generate-config config.json
          jq '.uuids = ["test-uuid"] |
              .prefix = "$" |
              .password = "test-pass" |
              .spread = true' config.json > config.tmp.json && mv config.tmp.json config.json

      - name: Run Multiple Mode Test
        run: |
          java -jar OpenBD.jar --inject -c config.json -m multiple -i input_multiple -o output --trace-errors
          ls output

      - name: Test Summary
        if: success()
        run: echo "✅ All integration tests passed!"